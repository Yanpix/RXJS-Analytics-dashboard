{"version":3,"sources":["utils/constants.js","store/temperature.js","store/airPressure.js","store/humidity.js","utils/index.js","store/generalInfo.js","components/generalInfo/styles.js","components/Title.js","components/generalInfo/GeneralInfo.js","components/Monitor.js","components/Temperature.js","components/AirPressure.js","components/Humidity.js","components/Chart.js","components/dataContainer/styles.js","components/dataContainer/DataContainer.js","components/ListItems.js","components/dashboard/styles.js","components/dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["COLORS","initialState","data","timestamp","Date","error","state","subject","BehaviorSubject","this","subscribe","setState","sendTemperature","value","next","clearTemperature","sendAirPressure","clearAirPressure","sendHumidity","clearHumidity","getRandomNumber","min","max","step","randomNum","Math","random","round","getRandomRespone","callback","Observable","sub","timeout","go","setTimeout","clearTimeout","checkForNoAnswer","time1","time2","time","getUnit","unit","toObject","temperature","airPressure","humidity","addZero","num","generateTime","date","hours","getHours","minutes","getMinutes","checkIfDataString","field","transformToCharData","getLatestInfo","combineLatest","streams$","pipe","throttleTime","map","checkForExpiration","validateData","dataArr","unsubscribe","forEach","stream$","args","temperatureStore","airPressureStore","humidityStore","useStyles","makeStyles","theme","root","position","flex","display","flexDirection","alignItems","color","paddingLeft","Title","props","Typography","component","variant","gutterBottom","children","GeneralInfo","classes","useState","useEffect","generalStore","className","Object","keys","key","str","charAt","toUpperCase","slice","UpperFirst","replace","Monitor","title","style","Tempature","temperatureState","setTemperatureState","updateTempature","useCallback","update","AirPressure","setAirPressure","updateAirPressure","Humidity","setHumidity","updateHumidity","Chart","useTheme","setData","maxData","prevData","length","concat","Fragment","margin","top","right","bottom","left","dataKey","stroke","palette","text","primary","tick","strokeWidth","fill","secondary","angle","textAnchor","type","dot","animationDuration","appBarSpacer","mixins","toolbar","content","flexGrow","height","overflow","container","paddingTop","spacing","paddingBottom","paper","border","background","opacity","fixedHeight","DataContainer","fixedHeightPaper","clsx","Container","maxWidth","Grid","item","xs","md","Paper","mainListItems","ListItem","button","ListItemIcon","ListItemText","paddingRight","toolbarIcon","justifyContent","padding","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","Dashboard","React","open","setOpen","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Drawer","Divider","List","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d4387ee.chunk.js","sourcesContent":["export const COLORS = {\n  TEMPERATURE_COLOR: \"#0fcb12\",\n  AIR_PRESSURE_COLOR: \"#3cb7c7\",\n  HUMIDITY_COLOR: \"#e4e041\"\n}\n\nexport const MAX_DATA_TO_SHOW = 20\n\nexport const initialState = {\n  data: 0,\n  timestamp: new Date(),\n  error: ''\n};","import { BehaviorSubject } from 'rxjs'\nimport { initialState } from '../utils/constants'\n\nclass TemperatureStore {\n\n  state = initialState\n  subject = new BehaviorSubject(this.state)\n  initialState = initialState\n\n  subscribe = (setState) => this.subject.subscribe(setState)\n\n  sendTemperature = (value) => {\n    this.state = {\n      ...this.state,\n      data: value,\n      timestamp: new Date()\n     };\n    this.subject.next(this.state);\n  }\n\n  clearTemperature = () => {\n    this.state = {...this.state, data: null};\n    this.subject.next(this.state);\n  }\n}\n\nexport default new TemperatureStore()","import { BehaviorSubject } from 'rxjs'\nimport { initialState } from '../utils/constants'\n\n\nclass AirPressureStore {\n\n  state = initialState\n  subject = new BehaviorSubject(this.state)\n  initialState = initialState\n\n  subscribe = (setState) => this.subject.subscribe(setState)\n\n  sendAirPressure = (value) => {\n    this.state = {\n      ...this.state,\n      data: value,\n      timestamp: new Date()\n     };\n    this.subject.next(this.state);\n  }\n\n  clearAirPressure = () => {\n    this.state = {...this.state, data: null};\n    this.subject.next(this.state);\n  }\n}\n\nexport default new AirPressureStore()","import { BehaviorSubject } from 'rxjs'\nimport { initialState } from '../utils/constants'\n\nclass HumidityStore {\n\n  state = initialState\n  subject = new BehaviorSubject(this.state)\n  initialState = initialState\n\n  subscribe = (setState) => this.subject.subscribe(setState)\n\n  sendHumidity = (value) => {\n    this.state = {\n      ...this.state,\n      data: value,\n      timestamp: new Date()\n     };\n    this.subject.next(this.state);\n  }\n\n  clearHumidity = () => {\n    this.state = {...this.state, data: null};\n    this.subject.next(this.state);\n  }\n}\n\nexport default new HumidityStore()\n","import { Observable } from \"rxjs\";\n\nexport const getRandomNumber = (min, max, step) => {\n  const randomNum = min + Math.random() * (max - min);\n  return Math.round(randomNum / step) * step;\n}\n\nconst getRandomDelay = () => getRandomNumber(100, 2000, 100)\n\nexport const getRandomRespone = (callback) => {\n  return new Observable(sub => {\n    let timeout = null;\n  \n    (function go() {\n      timeout = setTimeout(\n        () => {\n          sub.next(callback);\n          go();\n        },\n        getRandomDelay()\n      );\n    })();\n  \n    return () => clearTimeout(timeout);\n  });\n}\n\nconst getTimeDifference = (time) => {\n  return new Date() - time\n}\n\nconst NO_ANSWER = 'N/A'\n\nexport const checkForNoAnswer = (time1, time2, data) => {\n  if (getTimeDifference(time1) > time2) return NO_ANSWER\n  return data\n}\n\nexport const getUnit = unit => {\n  switch (unit) {\n    case 'temperature':\n      return '°C'\n    case 'airPressure':\n      return 'Pa'\n    case 'humidity':\n      return 'φ'\n    default:\n      return undefined\n  }\n}\n\nconst UpperFirst = (str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport const toSentenceCase = (str) => {\n  const result = str.replace( /([A-Z])/g, \" $1\" )\n  const finalResult = UpperFirst(result)\n  return finalResult\n}\n\nexport const toObject = ([temperature, airPressure, humidity]) => {\n  return {\n    temperature,\n    airPressure,\n    humidity\n  }\n}\n\nconst addZero = (num) => {\n  if (num <= 9) return '0' + num \n  return num\n}\n\nconst generateTime = () => {\n  const date = new Date()\n  const hours = addZero(date.getHours())\n  const minutes = addZero(date.getMinutes())\n  return `${hours}:${minutes}`\n}\n\nconst checkIfDataString = (field) => {\n  return typeof field.data === 'string' ? 0 : field.data\n}\n\nexport const transformToCharData = ({ temperature, airPressure, humidity }) => {\n  return {\n    temperature: checkIfDataString(temperature),\n    airPressure: checkIfDataString(airPressure),\n    humidity: checkIfDataString(humidity),\n    time: generateTime()\n  }\n}\n\nexport const loopTimeline = (setState, maxData) => (value) => {\n  setState(prevData => {\n    if (prevData.length > maxData) {\n      return prevData.slice(1).concat(transformToCharData(value))\n    }\n    return prevData.concat(transformToCharData(value))\n  })\n}","import { combineLatest  } from 'rxjs'\nimport { map, throttleTime  } from 'rxjs/internal/operators'\n\nimport temperatureStore from './temperature'\nimport airPressureStore from './airPressure'\nimport humidityStore from './humidity'\n\nimport { checkForNoAnswer, toObject } from '../utils'\n\n\nclass GeneralStore {\n\n  constructor(...args) {\n    this.streams$ = args\n  }\n\n  getLatestInfo = () => {\n    return combineLatest(...this.streams$)\n      .pipe(\n        throttleTime(100),\n        map(this.checkForExpiration),\n        map(this.toObject)\n      )\n  }\n\n  checkForExpiration = (data) => {\n    return data.map(this.validateData)\n  }\n\n  validateData = ({ data, timestamp }) => {\n    return { data: checkForNoAnswer(timestamp, 1000, data), timestamp }\n  }\n\n  toObject = (dataArr) => {\n    return toObject(dataArr)\n  }\n\n  unsubscribe = () => {\n    this.streams$.forEach(stream$ => stream$.unsubscribe())\n  }\n}\n\nexport default new GeneralStore(\n  temperatureStore.subject,\n  airPressureStore.subject,\n  humidityStore.subject\n)","import { makeStyles } from '@material-ui/core/styles'\nimport { COLORS } from '../../utils/constants'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n  flex: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    color: '#fff',\n    paddingLeft: 10\n  },\n  temperature: {\n    color: COLORS.TEMPERATURE_COLOR\n  },\n  airPressure: {\n    color: COLORS.AIR_PRESSURE_COLOR\n  },\n  humidity: {\n    color: COLORS.HUMIDITY_COLOR\n  }\n}));","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect, useState } from 'react';\nimport generalStore from '../../store/generalInfo';\nimport { Typography } from '@material-ui/core';\nimport { useStyles } from './styles'\nimport { toSentenceCase, getUnit } from '../../utils';\nimport Title from '../Title';\n\n\nexport default function GeneralInfo() {\n  const classes = useStyles();\n\n  const [state, setState] = useState({})\n\n  useEffect(() => {\n    generalStore.getLatestInfo()\n      .subscribe(setState)\n    return () => generalStore.unsubscribe()\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Title>General Information</Title>\n      <div className={classes.flex}>\n        {Object.keys(state).map(key => {\n          return (\n            <Typography component=\"p\" variant=\"h5\" key={key}>\n              {toSentenceCase(key)}:\n              <span className={classes[key]}>\n                {` ${state[key]?.data}${getUnit(key)}`}\n              </span>\n            </Typography>\n          )\n        })}\n      </div>\n    </div>\n  );\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from 'prop-types'\nimport Title from './Title'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n}));\n\nexport default function Monitor({ title, value, color }) {\n  \n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Title>{ title }</Title>\n      <Typography component=\"p\" variant=\"h3\" style={{ color }}>\n        { value }\n      </Typography>\n    </div>\n  );\n}\n\nMonitor.propTypes = {\n  title: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number\n  ]),\n  color: PropTypes.string\n};","import React, { useCallback, useEffect, useState } from 'react'\nimport { getRandomNumber, getRandomRespone, getUnit } from \"../utils\"\nimport temperatureStore from '../store/temperature'\nimport { COLORS } from '../utils/constants'\nimport Monitor from './Monitor'\n\nexport default function Tempature() {\n\n  const [temperatureState, setTemperatureState] = useState(temperatureStore.initialState)\n\n  useEffect(()=> {\n    temperatureStore.subscribe(setTemperatureState);\n    return () => {\n      temperatureStore.clearTemperature()\n    }\n  },[]);\n\n  const updateTempature = useCallback(() => {\n    temperatureStore.sendTemperature(getRandomNumber(30, 100, 5))\n  }, [])\n\n  useEffect(() => {\n    getRandomRespone(updateTempature)\n      .subscribe(update => update())\n  }, [updateTempature])\n\n  return (\n    <Monitor \n      title=\"Tempature\" \n      value={`${temperatureState.data}${getUnit('temperature')}`} \n      color={COLORS.TEMPERATURE_COLOR}  \n    />\n  )\n}","import React, { useCallback, useEffect, useState } from 'react'\nimport { getRandomNumber, getRandomRespone, getUnit } from \"../utils\"\nimport airPressureStore from '../store/airPressure'\nimport { COLORS } from '../utils/constants'\nimport Monitor from './Monitor'\n\nexport default function AirPressure() {\n\n  const [airPressure, setAirPressure] = useState(airPressureStore.initialState)\n\n  useState(()=> {\n    airPressureStore.subscribe(setAirPressure);\n    return () => {\n      airPressureStore.clearAirPressure()\n    }\n  },[]);\n\n  const updateAirPressure = useCallback(() => {\n    airPressureStore.sendAirPressure(getRandomNumber(0, 4000, 100))\n  }, [])\n\n  useEffect(() => {\n    getRandomRespone(updateAirPressure)\n      .subscribe(update => update())\n  }, [updateAirPressure])\n\n  return (\n    <Monitor \n      title=\"Air pressure\" \n      value={`${airPressure.data}${getUnit('airPressure')}`} \n      color={COLORS.AIR_PRESSURE_COLOR}\n    />\n  ) \n}","import React, { useCallback, useEffect, useState } from 'react'\nimport { getRandomNumber, getRandomRespone, getUnit } from \"../utils\"\nimport humidityStore from '../store/humidity'\nimport { COLORS } from '../utils/constants'\nimport Monitor from './Monitor'\n\nexport default function Humidity() {\n\n  const [humidity, setHumidity] = useState(humidityStore.initialState)\n\n  useState(()=> {\n    humidityStore.subscribe(setHumidity);\n    return () => {\n      humidityStore.clearHumidity()\n    }\n  },[]);\n\n  const updateHumidity = useCallback(() => {\n    humidityStore.sendHumidity(getRandomNumber(100, 1000, 10))\n  }, [])\n\n  useEffect(() => {\n    getRandomRespone(updateHumidity)\n      .subscribe(update => update())\n  }, [updateHumidity])\n\n  return (\n    <Monitor \n      title=\"Humidity\" \n      value={`${humidity.data}${getUnit('humidity')}`} \n      color={COLORS.HUMIDITY_COLOR}\n    />\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts'\nimport { COLORS, MAX_DATA_TO_SHOW } from '../utils/constants'\nimport { loopTimeline } from '../utils'\nimport generalStore from '../store/generalInfo'\nimport Title from './Title'\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    generalStore.getLatestInfo()\n      .subscribe(loopTimeline(setData, MAX_DATA_TO_SHOW))\n    return () => generalStore.unsubscribe()\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis \n            dataKey=\"time\" \n            stroke={theme.palette.text.primary}\n            tick={{stroke: 'white', strokeWidth: 1, fill: 'white'}}\n          />\n          <YAxis stroke={theme.palette.text.secondary} tick={{stroke: 'white', strokeWidth: 1}}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', color: theme.palette.text.primary }}\n            >\n              Monitoring systems\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"temperature\" stroke={COLORS.TEMPERATURE_COLOR} dot={false} animationDuration={false}/>\n          <Line type=\"monotone\" dataKey=\"airPressure\" stroke={COLORS.AIR_PRESSURE_COLOR} dot={false} animationDuration={false}/>\n          <Line type=\"monotone\" dataKey=\"humidity\" stroke={COLORS.HUMIDITY_COLOR} dot={false} animationDuration={false}/>\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme) => ({\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    border: `${theme.spacing(2)}px solid #fff`,\n    background: \"#000\",\n    position: 'relative',\n    '&:before': {\n      content: '\"\"',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      display: 'block',\n      position: 'absolute',\n      background: \"url('https://www.pixelscrapper.com/sites/default/files/styles/456_scale/public/s3fs-user-content/graphic-image/user-107713/node-244694/green-grid-graphic-paper-wizard-gray.jpg')\",\n      opacity: 0.3\n    }\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));","import React from 'react'\nimport clsx from 'clsx'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport GeneralInfo from \"../generalInfo/GeneralInfo\"\nimport Tempature from \"../Temperature\"\nimport AirPressure from \"../AirPressure\"\nimport Humidity from \"../Humidity\"\nimport Chart from '../Chart'\nimport { useStyles } from './styles'\n\n\nexport default function DataContainer() {\n  const classes = useStyles();\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <main className={classes.content}>\n      <div className={classes.appBarSpacer} />\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3}>\n          {/* General Info */}\n          <Grid item xs={12} md={4}>\n            <Paper className={fixedHeightPaper}>\n              <GeneralInfo />\n            </Paper>\n          </Grid>\n          {/* Chart */}\n          <Grid item xs={12} md={8}>\n            <Paper className={fixedHeightPaper}>\n              <Chart />\n            </Paper>\n          </Grid>\n          {/* Tempature */}\n          <Grid item xs={12} md={4}>\n            <Paper className={fixedHeightPaper}>\n              <Tempature />\n            </Paper>\n          </Grid>\n          {/* Air Pressure */}\n          <Grid item xs={12} md={4}>\n            <Paper className={fixedHeightPaper}>\n              <AirPressure />\n            </Paper>\n          </Grid>\n          {/* Humidity */}\n          <Grid item xs={12} md={4}>\n            <Paper className={fixedHeightPaper}>\n              <Humidity />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n  </main>\n  )\n}","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\n\n\nexport const mainListItems = (\n  <ListItem button>\n    <ListItemIcon>\n      <DashboardIcon />\n    </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n  </ListItem>\n);\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24,\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n}));","import React from 'react'\nimport clsx from 'clsx'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport DataContainer from '../dataContainer/DataContainer'\nimport { mainListItems } from '../ListItems'\nimport { useStyles } from './styles'\n\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n      </Drawer>\n      <DataContainer />\n    </div>\n  );\n}","import Dashboard from './components/dashboard/Dashboard'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}